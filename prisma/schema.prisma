generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL") 
}

model User {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  name               String             @unique
  password           String
  friends            Friend[]           @relation("UserFriends")
  friendOf           Friend[]           @relation("FriendOf")
  boardsOwned        Board[]            @relation("BoardOwner") 
  boardsParticipated BoardParticipant[] 
  Ticket             Ticket[]
}

model Board {
  id           String             @id @default(auto()) @map("_id") @db.ObjectId
  owner        User               @relation("BoardOwner", fields: [ownerId], references: [id])
  ownerId      String             @db.ObjectId
  name         String
  participants BoardParticipant[] 
  tickets      Ticket[]
}

model BoardParticipant {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  user    User   @relation(fields: [userId], references: [id])
  userId  String @db.ObjectId
  board   Board  @relation(fields: [boardId], references: [id])
  boardId String @db.ObjectId
}

model Friend {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  user     User   @relation("UserFriends", fields: [userId], references: [id])
  userId   String @db.ObjectId
  friend   User   @relation("FriendOf", fields: [friendId], references: [id])
  friendId String @db.ObjectId
  status   String 
}

model Ticket {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String @db.ObjectId
  board       Board  @relation(fields: [boardId], references: [id])
  boardId     String @db.ObjectId
  x           Int
  y           Int
}
